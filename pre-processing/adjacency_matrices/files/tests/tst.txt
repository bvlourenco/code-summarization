{"original_string": "public static boolean isFile(String path){\n  File f=new File(path);\n  return f.isFile();\n}", "docstring": "Checks if the given path is a file", "code_tokens": ["public", "static", "boolean", "is", "file", "string", "path", "file", "f", "new", "file", "path", "return", "f", "is", "file"], "docstring_tokens": ["Checks", "if", "the", "given", "path", "is", "a", "file"]}
{"original_string": "private int currentDepth(){\n  try {\n    Integer oneBased=((Integer)DEPTH_FIELD.get(this));\n    return oneBased - 1;\n  }\n catch (  IllegalAccessException e) {\n    throw new AssertionError(e);\n  }\n}", "docstring": "Returns a 0-based depth within the object graph of the current object being serialized.", "code_tokens": ["private", "int", "current", "depth", "try", "integer", "one", "based", "integer", "depth", "field", "get", "this", "return", "one", "based", "1", "catch", "illegal", "access", "exception", "e", "throw", "new", "assertion", "error", "e"], "docstring_tokens": ["Returns", "a", "0", "-", "based", "depth", "within", "the", "object", "graph", "of", "the", "current", "object", "being", "serialized", "."]}
{"original_string": "private static boolean isDoubleEqual(double value,double valueToCompare){\n  return (Math.abs(value - valueToCompare) < 0.001);\n}", "docstring": "Checks if is double values are equal.", "code_tokens": ["private", "static", "boolean", "is", "double", "equal", "double", "value", "double", "value", "to", "compare", "return", "math", "abs", "value", "value", "to", "compare", "0.001"], "docstring_tokens": ["Checks", "if", "is", "double", "values", "are", "equal", "."]}